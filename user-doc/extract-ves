#! /bin/bash

source ../sourceme.sh

# initial cleanup
rm -f errors-ves
rm -rf automatic-ves
mkdir automatic-ves

# Generate all the documentation pages from comments
cat ../*/*/*cpp |
awk 'BEGIN{gfile="automatic-ves/VES_GLOSSARY.list"; dfile="automatic-ves/VES_DICTIONARY.list"; }{
  if($1=="//+ENDPLUMEDOC" && inside){
     inside=0;
     print "*/" >output
  }
  if(inside>=2 && NF==0){
     print "</td> </tr>" >> lfile
     if(inside==2){ printf "</td> </tr>\n" > gfile; }
     if(inside==3){ printf "</td> </tr>\n" > dfile; }
     inside=1
  }
  if(inside==1 && $1!="/*" && $1!="*/") print $0 > output
  if(inside>=2 && $1!="/*" && $1!="*/" ){
     print $0 > output
     printf "%s", $0 >> lfile
     if(inside==2){ printf "%s", $0 > gfile; }
     if(inside==3){ printf "%s", $0 > dfile; }
  }
  if($1=="//+PLUMEDOC"){
    if( $2=="VES_BASISF" || $2=="VES_TARGETDIST" || $2=="VES_OPTIMIZER" ){
      if(lfile!="") close(lfile)
      lfile="automatic-ves/"$2".list"

      printf "<tr> <td width=%s> \\subpage %s </td> <td>","5%", $3 >> lfile
#       printf "<tr> <td width=5%> \\ref %s </td><td> %s </td><td>",$3, $2 > gfile
      printf "<tr> <td width=%s> \\ref %s </td><td> %s </td><td>","5%",$3, $2 > gfile

      if(output!="")close(output);
      output="automatic-ves/"$3".tmp";
      print "/**" > output
      print "\\page "$3" "$3 > output
#      print "\\section "$3 >output
      inside=2;
    } else if ( $2=="VES_INTERNAL" ){
      if(output!="")close(output);

      printf "<tr> <td width=%s> \\subpage %s </td><td> %s </td><td>","5%",$3, $2 > dfile

      output="automatic-ves/"$3".tmp";
      lfile="automatic-ves/"$3".tmp";
      print "/**" > output
      print "\\page "$3" "$3 > output
#      print "\\section "$3 >output
      inside=3;
    }
  }
}'

# Now put all list files in alphabetical order
for file in automatic-ves/*.list ; do

  sort $file > $file-1
  mv $file-1 $file
done


# Generate all the documentation from keywords
for file in automatic-ves/*.tmp
do
  flag=${file#automatic-ves/}
  flag=${flag/.tmp}
  if grep -q '//+PLUMEDOC VES_INTERNAL' $file 1>/dev/null 2>/dev/null ; then
        cp $file automatic-ves/$flag.txt
  else
     if ! ../src/lib/plumed --no-mpi manual --action=$flag > automatic-ves/$flag.man 2> /dev/null ; then
        echo Full manual for action $flag will not be generated as you are building the manual from a code where this action was not compiled >> errors-ves
     elif ! grep -q "\par Examples" $file 1>/dev/null 2>/dev/null
     then
       echo There are no examples inside documentation for action: $flag >> errors-ves
     fi
       {
        awk '/\\par Examples/{xx=1}{if(xx==0) printf("%s\n",$0)}' automatic-ves/$flag.tmp
        cat automatic-ves/$flag.man
        awk '/\\par Examples/{xx=1}{if(xx==1) printf("%s\n",$0)}' automatic-ves/$flag.tmp
       } > automatic-ves/$flag.txt
   fi
done

sed -ie 's/<b> --/<b> \\c \\-\\-/g' automatic-ves/*.txt
rm automatic-ves/*.txte

for file in VES_BASISF VES_TARGETDIST VES_OPTIMIZER VES_GLOSSARY VES_DICTIONARY
do
  mv automatic-ves/$file.list automatic-ves/$file.1.list
  {
    echo "<table align=center frame=void width=95%% cellpadding=5%%>"
    cat automatic-ves/$file.1.list
    echo "</table>"
  } > automatic-ves/$file.list
  rm automatic-ves/$file.1.list
done

# Make all double hyphens appear as double hypens
sed -ie 's/<b> --/<b> \\c \\-\\-/g' automatic-ves/*.txt
rm automatic-ves/*.txte

txtfiles_ves="
VES.txt
"

for f in ${txtfiles_ves}
do
file=${f%.txt}

# first replace with the content of the files
# then grep out the special strings

cat $file.txt |
  sed "
    /^ *@VES_GLOSSARY@ *$/r automatic-ves/VES_GLOSSARY.list
    /^ *@VES_DICTIONARY@ *$/r automatic-ves/VES_DICTIONARY.list
    /^ *@VES_BASISF@ *$/r automatic-ves/VES_BASISF.list
    /^ *@VES_TARGETDIST@ *$/r automatic-ves/VES_TARGETDIST.list
    /^ *@VES_OPTIMIZER@ *$/r automatic-ves/VES_OPTIMIZER.list
" | grep -Ev '^ *@[A-Z_]*@ *$' > ${file}PP.txt
done
