language: cpp
matrix:
  include:
# list of configurations to be attempted:
# MPI + doc
# this is the "master" one, it is going to update the manual if log contains [makedoc]
  - os: linux
    dist: trusty
    sudo: required
    env: PLUMED_CC=mpicc PLUMED_CXX=mpic++ MAKEDOC=yes ALMOST=yes
# the following are with debug flags
  - os: linux
    dist: trusty
    sudo: required
    env: PLUMED_CC=gcc   PLUMED_CXX=g++    CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx"
  - os: linux
    dist: trusty
    sudo: required
    env: PLUMED_CC=mpicc PLUMED_CXX=mpic++ CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx"
# then check with different optimization flags
  - os: linux
    dist: trusty
    sudo: required
    env: PLUMED_CC=gcc   PLUMED_CXX=g++     PLUMED_CXXFLAGS=-O3 LAPACK=yes
# then I try serial compiler on UBUNTU precise
  - os: linux
    dist: precise
    sudo: required
    env: PLUMED_CC=gcc   PLUMED_CXX=g++
# test using external blas with internal lapack
  - os: linux
    dist: trusty
    sudo: required
    env: PLUMED_CC=mpicc PLUMED_CXX=mpic++  PLUMED_CXXFLAGS=-O3 LAPACK=yes CONFIG_FLAGS="--disable-external-lapack"
# osx serial
  - os: osx
    env: PLUMED_CC=clang PLUMED_CXX=clang++ PLUMED_CXXFLAGS=-O3
# osx parallel
  - os: osx
    env: PLUMED_CC=mpicc PLUMED_CXX=mpic++  PLUMED_CXXFLAGS=-O3
# cppcheck
  - os: linux
    sudo: required
    env: CPPCHECK=yes
# Possible additional variables:
#   VALGRIND=yes to make valgrind tests, only when log contains string [valgrind]
install:
# setup environment to allow install on the home directory
  - export PATH="$HOME/opt/bin:$PATH"
  - export CPATH="$HOME/opt/include:$CPATH"
  - export INCLUDE="$HOME/opt/include:$INCLUDE"
  - export LIBRARY_PATH="$HOME/opt/lib:$LIBRARY_PATH"
  - export LD_LIBRARY_PATH="$HOME/opt/lib:$LD_LIBRARY_PATH"
# build the manual, only if log contains string [makedoc]
  - export PLUMED_NUM_THREADS=2
  - ./.travis/check.log makedoc  || MAKEDOC=no
  - ./.travis/check.log valgrind || VALGRIND=no
  - ./.travis/check.log almost   || ALMOST=no
# update packages
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update > /dev/null ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -qq ; fi
# install some package - these are fast, we install them anyway
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y libmatheval-dev ; fi
  - if test "$PLUMED_CXX" ; then ./.travis/install.xdrfile ; fi
# cppcheck:
  - if test "$CPPCHECK" == yes ; then  ./.travis/install.cppcheck 1.69  ; fi
# installation of these packages takes a lot of time
# we do it only when needed
  - if test "$PLUMED_CXX" == "mpic++" -a "$TRAVIS_OS_NAME" == "linux" ; then sudo apt-get install -y libopenmpi-dev openmpi-bin ; fi
  - if test "$PLUMED_CXX" == "mpic++" -a "$TRAVIS_OS_NAME" == "osx" ;   then brew install openmpi ; fi
  - if test "$MAKEDOC" == yes ; then sudo apt-get install -y graphviz            ; fi
# install doxygen-latex
  - if test "$MAKEDOC" == yes ; then sudo apt-get install -y doxygen-latex ; fi
# then replace doxygen with the desided version
  - if test "$MAKEDOC" == yes ; then ./.travis/install.doxygen Release_1_8_11 ; fi
  - if test "$VALGRIND" == yes ; then sudo apt-get install -y valgrind           ; fi
  - if test "$LAPACK" == yes ; then sudo apt-get -y install libatlas-base-dev      ; fi
  - if test "$ALMOST" == yes ; then sudo apt-get -y install libatlas-base-dev      ; fi
  - if test "$ALMOST" == yes ; then ./.travis/install.almost                     ; fi
  - if test "$ALMOST" == yes ; then ENALMOST="--enable-almost"                 ; fi
  - if test "$ALMOST" == yes ; then PLUMED_CPPFLAGS="-I$HOME/opt/include -I$HOME/opt/include/almost"  ; fi
# moreover, we hardcode path to dynamic library, required for xdrfile to link properly
# I do it only when LD_LIBRARY_PATH is non blank, since otherwise clang gives problems
  - if test -n "$LD_LIBRARY_PATH" ; then PLUMED_LDFLAGS="-Wl,-rpath,$LD_LIBRARY_PATH" ; fi
script:
# we enable crystallization and manyrestraints modules
  - CONFIG_FLAGS="$CONFIG_FLAGS --enable-modules=crystallization:manyrestraints:adjmat"

# BUILD:
# this is done only if PLUMED_CXX is defined
# we have to pass the full path since on travis machines sudo does not have compilers in the path
  - if test "$PLUMED_CXX" ; then ./configure CXX=$(which $PLUMED_CXX) CC=$(which $PLUMED_CC) CXXFLAGS="$PLUMED_CXXFLAGS" LDFLAGS="$PLUMED_LDFLAGS" CPPFLAGS="$PLUMED_CPPFLAGS" $ENALMOST $CONFIG_FLAGS ; fi
  - if test "$PLUMED_CXX" ; then make -j 4 ; fi
# we install plumed so that it is in the path
  - if test "$PLUMED_CXX" ; then make install prefix="$HOME/opt" ; fi

# TEST:
  - if test "$VALGRIND" == yes ; then OPT=valgrind ; else OPT="" ; fi
  - if test "$PLUMED_CXX" ; then make -C regtest $OPT ; fi
  - if test "$MAKEDOC" == yes ; then make -C regtest copytodoc ; fi
  - if test "$MAKEDOC" == yes ; then make doc >/dev/null ; fi
  - if test "$PLUMED_CXX" ; then make -C regtest checkfail ; fi

# CPPCHECK:
# this is required so as to have all the include files inplace:
# notice that this is done automatically in build
  - if test "$CPPCHECK" == yes ; then make -C src/lib/ dirslinks ; fi
# then we do cppcheck
  - if test "$CPPCHECK" == yes ; then make cppcheck ; fi
after_success:
  - if test "$MAKEDOC" == yes ; then ./.travis/pushdoc ; fi 
